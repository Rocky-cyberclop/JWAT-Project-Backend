version: '1.0'

services:

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 992002
      POSTGRES_DB: jwat_knowledge_sharing
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d jwat_knowledge_sharing"
        ]
      interval: 2s
      timeout: 2s
      retries: 2

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 2

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    environment:
      - node.name=elasticsearch
      - cluster.name=datasearch
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9200/_cluster/health"
        ]
      interval: 15s
      timeout: 2s
      retries: 2

  backend:
    image: rockyoperation/knowledge-sharing-backend
    ports:
      - 3001:3001
    environment:
      PORT: 3001
      DB_NAME: jwat_knowledge_sharing
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: 992002
      DB_HOST: postgres
      ACCESS_TOKEN_KEY: accesstokenkeyjwat2402
      REFRESH_TOKEN_KEY: refreshtokenkeyjwat2402
      CLOUDINARY_NAME: dzfwvoijo
      CLOUDINARY_API_KEY: 749281176233987
      CLOUDINARY_API_SECRET: BzQjqSewHKCgvfLjeosAX8x8Z0o
      MAIL_HOST: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USER: phuochoang.tran.clv@gmail.com
      MAIL_PASSWORD: hbxtaxafscymmscp
      DEFAULT_MAIL_FROM: phuochoang.tran.clv@gmail.com
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ELASTICSEARCH_NODE: http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://localhost:3001/api/health" ]
    #   interval: 2s
    #   timeout: 2s
    #   retries: 2

volumes:
  postgres-data:
  redis-data:
  esdata:
    driver: local

## No need to use this container
#   kibana:
#     image: docker.elastic.co/kibana/kibana:8.14.1
#     ports:
#       - "5601:5601"

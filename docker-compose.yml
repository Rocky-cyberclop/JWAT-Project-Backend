version: '1.0'

services:

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 2

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    environment:
      - node.name=elasticsearch
      - cluster.name=datasearch
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9200/_cluster/health"
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: rockyoperation/knowledge-sharing-backend
    ports:
      - 3001:3001
    environment:
      PORT: ${PORT}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      REFRESH_TOKEN_KEY: ${REFRESH_TOKEN_KEY}
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      DEFAULT_MAIL_FROM: ${DEFAULT_MAIL_FROM}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      ELASTICSEARCH_NODE: ${ELASTICSEARCH_NODE}
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      # postgres:
      #   condition: service_healthy
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://localhost:3001/api/health" ]
    #   interval: 2s
    #   timeout: 2s
    #   retries: 2

# postgres:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: 992002
  #     POSTGRES_DB: jwat_knowledge_sharing
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "pg_isready -U postgres -d jwat_knowledge_sharing"
  #       ]
  #     interval: 2s
  #     timeout: 2s
  #     retries: 2
volumes:
  redis-data:
  esdata:
    driver: local
  # postgres-data:
